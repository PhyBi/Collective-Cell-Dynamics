#!/usr/bin/env bash
set -e # Exit on first failure

# Single threaded build
make FC=ifort rebuild
. setup_test_env.sh

# Initialization & hardlinking state.cpt to init.cpt
ccd init; ln -f state.cpt init.cpt 

# Run nsamples=100 from init.cpt (so that we get 2 checkpoints at 5000 steps interval)
ccd -p 'nsamples=100' run -n
ccd cpt_to_xy
mv -f config.xy config.xy.unfragmented ; mv -f traj.bin traj.bin.unfragmented
echo 'Finished control run uninterrupted'

# Run nsamples=100 from init.cpt & crash it 
ln -f init.cpt state.cpt
ccd -p 'nsamples=100' run -n 2> >(tee /dev/stderr | (grep -m1 -i 'checkpoint'; killall -r -w -KILL ccd_.*)) || echo 'Crashed the test run'
# stderr/log is piped to grep. When grep sees 1st checkpoint in log, it exists, triggering a crash using killall or pkill.


# Run again, with nothing (parameter-wise) changed except an extra '-f' option, to finish the incomplete part
ccd -p 'nsamples=100' run -n -f
ccd cpt_to_xy
mv -f config.xy config.xy.fragmented ; mv -f traj.bin traj.bin.fragmented
echo 'Finished the crashed test run'

echo 'Comparing the control and test results...'
# Compare the final traj and xy from both runs. They should agree.
diff -q traj.bin.unfragmented traj.bin.fragmented && echo 'Good with traj' || false
diff -q config.xy.unfragmented config.xy.fragmented && echo 'Good with config' || false
echo 'Passed'

rm -f traj.bin* config.xy* state.cpt*
